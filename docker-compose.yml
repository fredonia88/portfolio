#version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: ./docker/Dockerfile_django
    container_name: webserver
    volumes:
      - static_data:/opt/django/portfolio/static
    expose:
      - "8000"
    ports:
      - "8000:8000"
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_EMAIL_HOST: ${DJANGO_EMAIL_HOST}
      DJANGO_EMAIL_PORT: ${DJANGO_EMAIL_PORT}
      DJANGO_EMAIL_USE_TLS: ${DJANGO_EMAIL_USE_TLS}
      DJANGO_EMAIL_HOST_USER: ${DJANGO_EMAIL_HOST_USER}
      DJANGO_EMAIL_HOST_PASSWORD: ${DJANGO_EMAIL_HOST_PASSWORD}
      DJANGO_EMAIL_RECIPIENT: ${DJANGO_EMAIL_RECIPIENT}
      DJANGO_RECAPTCHA_PUBLIC_KEY: ${DJANGO_RECAPTCHA_PUBLIC_KEY}
      DJANGO_RECAPTCHA_PRIVATE_KEY: ${DJANGO_RECAPTCHA_PRIVATE_KEY}
    depends_on:
      - db
    networks:
      - docker_network

  db:
    #profiles: ["dev"]
    image: postgres:15
    container_name: db_postgres
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - docker_network

  nginx:
    image: nginx:latest
    container_name: nginx
    expose:
      - "80"
    ports:
      - "80:80"
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_EMAIL_HOST: ${DJANGO_EMAIL_HOST}
      DJANGO_EMAIL_PORT: ${DJANGO_EMAIL_PORT}
      DJANGO_EMAIL_USE_TLS: ${DJANGO_EMAIL_USE_TLS}
      DJANGO_EMAIL_HOST_USER: ${DJANGO_EMAIL_HOST_USER}
      DJANGO_EMAIL_HOST_PASSWORD: ${DJANGO_EMAIL_HOST_PASSWORD}
      DJANGO_EMAIL_RECIPIENT: ${DJANGO_EMAIL_RECIPIENT}
      DJANGO_RECAPTCHA_PUBLIC_KEY: ${DJANGO_RECAPTCHA_PUBLIC_KEY}
      DJANGO_RECAPTCHA_PRIVATE_KEY: ${DJANGO_RECAPTCHA_PRIVATE_KEY}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_data:/opt/django/portfolio/static
    depends_on:
      - web
    networks:
      - docker_network

volumes:
  postgres_data:
  static_data:

networks:
  docker_network:
    driver: bridge
    name: docker_network